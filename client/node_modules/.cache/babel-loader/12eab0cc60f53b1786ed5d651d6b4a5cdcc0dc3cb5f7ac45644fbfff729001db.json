{"ast":null,"code":"var _jsxFileName = \"/Users/ericsangcap/ai-chatbot/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { marked } from 'marked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Hi! How can I help you today?'\n  }]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    try {\n      const response = await fetch('http://localhost:5050/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: updatedMessages\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        sender: 'bot',\n        text: data.reply\n      };\n      setMessages([...updatedMessages, botMessage]);\n    } catch (error) {\n      console.error('Failed to fetch:', error);\n      const errorMessage = {\n        sender: 'bot',\n        text: 'Sorry, something went wrong!'\n      };\n      setMessages([...updatedMessages, errorMessage]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-log\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${msg.sender}`,\n        children: msg.sender === 'Hannah' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"markdown-response\",\n          dangerouslySetInnerHTML: {\n            __html: marked.parse(msg.text)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6OiGtIwhDjqop8fqsFS1TBkgXzE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","marked","jsxDEV","_jsxDEV","App","_s","messages","setMessages","sender","text","input","setInput","sendMessage","userMessage","updatedMessages","response","fetch","method","headers","body","JSON","stringify","data","json","botMessage","reply","error","console","errorMessage","className","children","map","msg","index","dangerouslySetInnerHTML","__html","parse","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ericsangcap/ai-chatbot/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { marked } from 'marked';\n\nfunction App() {\n  const [messages, setMessages] = useState([{ sender: 'bot', text: 'Hi! How can I help you today?' }]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    const userMessage = { sender: 'user', text: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n\n    try {\n      const response = await fetch('http://localhost:5050/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedMessages })\n      });\n\n      const data = await response.json();\n      const botMessage = { sender: 'bot', text: data.reply };\n      setMessages([...updatedMessages, botMessage]);\n    } catch (error) {\n      console.error('Failed to fetch:', error);\n      const errorMessage = { sender: 'bot', text: 'Sorry, something went wrong!' };\n      setMessages([...updatedMessages, errorMessage]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-log\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\n            {msg.sender === 'Hannah' ? (\n              <div\n                className=\"markdown-response\"\n                dangerouslySetInnerHTML={{ __html: marked.parse(msg.text) }}\n              />\n            ) : (\n              <p>{msg.text}</p>\n            )}\n          </div>\n        ))}\n      </div>\n      <input value={input} onChange={e => setInput(e.target.value)} />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}