{"ast":null,"code":"var _jsxFileName = \"/Users/ericsangcap/ai-chatbot/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Hi! How can I help you today?'\n  }]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    const response = await fetch('http://localhost:5050/api/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        messages: updatedMessages\n      })\n    });\n    const data = await response.json();\n    const botMessage = {\n      sender: 'bot',\n      text: data.reply\n    };\n    setMessages([...updatedMessages, botMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [m.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 44\n        }, this), \" \", m.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6OiGtIwhDjqop8fqsFS1TBkgXzE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","sender","text","input","setInput","sendMessage","userMessage","updatedMessages","response","fetch","method","headers","body","JSON","stringify","data","json","botMessage","reply","children","map","m","i","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ericsangcap/ai-chatbot/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([{ sender: 'bot', text: 'Hi! How can I help you today?' }]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    const userMessage = { sender: 'user', text: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n\n    const response = await fetch('http://localhost:5050/api/chat', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ messages: updatedMessages })\n    });\n\n    const data = await response.json();\n    const botMessage = { sender: 'bot', text: data.reply };\n    setMessages([...updatedMessages, botMessage]);\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((m, i) => <p key={i}><strong>{m.sender}:</strong> {m.text}</p>)}\n      </div>\n      <input value={input} onChange={e => setInput(e.target.value)} />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;IAAEO,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAgC,CAAC,CAAC,CAAC;EACpG,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,WAAW,GAAG;MAAEL,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAM,CAAC;IACnD,MAAMI,eAAe,GAAG,CAAC,GAAGR,QAAQ,EAAEO,WAAW,CAAC;IAClDN,WAAW,CAACO,eAAe,CAAC;IAC5BH,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf,QAAQ,EAAEQ;MAAgB,CAAC;IACpD,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAG;MAAEhB,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAEa,IAAI,CAACG;IAAM,CAAC;IACtDlB,WAAW,CAAC,CAAC,GAAGO,eAAe,EAAEU,UAAU,CAAC,CAAC;EAC/C,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EACGpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAK1B,OAAA;QAAAuB,QAAA,gBAAWvB,OAAA;UAAAuB,QAAA,GAASE,CAAC,CAACpB,MAAM,EAAC,GAAC;QAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACL,CAAC,CAACnB,IAAI;MAAA,GAAvCoB,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACN9B,OAAA;MAAO+B,KAAK,EAAExB,KAAM;MAACyB,QAAQ,EAAEC,CAAC,IAAIzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChE9B,OAAA;MAAQmC,OAAO,EAAE1B,WAAY;MAAAc,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAAC5B,EAAA,CA9BQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}